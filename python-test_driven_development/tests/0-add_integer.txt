>>> add_integer = __import__('0-add_integer').add_integer
>>>
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/wayzer/hlbrtn/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 4, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> print(add_integer(4, "School"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/wayzer/hlbrtn/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    return a + b
           ~~^~~
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> print(add_integer(None))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/wayzer/hlbrtn/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    return a + b
           ~~^~~
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
